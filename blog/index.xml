<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Blogs on Shyim's Brain</title><link>https://shyim.me/blog/</link><description>Recent content in Blogs on Shyim's Brain</description><image><url>https://avatars.githubusercontent.com/u/6224096?v=4?s=400</url><link>https://avatars.githubusercontent.com/u/6224096?v=4?s=400</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Jul 2021 00:15:59 +0000</lastBuildDate><atom:link href="https://shyim.me/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimization of Thumbnails in PHP</title><link>https://shyim.me/blog/thumbnails-and-php/</link><pubDate>Wed, 14 Jul 2021 00:15:59 +0000</pubDate><guid>https://shyim.me/blog/thumbnails-and-php/</guid><description>Every shop owner wants a fast online shop with the best pagespeed results. The images have a huge impact on these stats. But can we achieve better results with only PHP?
Image generation with PHP In PHP there are two ways how images can be generated: using the gd, or the ImageMagick extension. Both extensions are not optimized to create very small images and they are quite slow. They also lack support for newer image formats like avif (PHP 8.</description></item><item><title>You don't need a plugin to customize a Shopware 6 project</title><link>https://shyim.me/blog/you-dont-need-a-plugin-to-customize-shopware-6/</link><pubDate>Sun, 04 Jul 2021 23:15:59 +0000</pubDate><guid>https://shyim.me/blog/you-dont-need-a-plugin-to-customize-shopware-6/</guid><description>Every developer who has created a plugin has already created a Symfony bundle. All Shopware plugins are extending from a Shopware bundle class which extends from the Symfony bundle. You might now ask yourself: when plugins are bundles, why did you write this blog post? First, let&amp;rsquo;s list the differences of a plugin and the two types of bundles:
Feature Plugin Shopware Bundle Symfony Bundle modifying Shopware ✔️ ✔️ ✔️ can have migrations ✔️ ✔️ ❌ can be a theme ✔️ ✔️ ❌ can modify admin / storefront with js/css ✔️ ✔️ ❌ can be installed, uninstalled (lifecyle) ✔️ ❌ ❌ can be managed by the shop owner in administration ✔️ ❌ ❌ The benefits of working with a Bundle Having less features is sometimes better.</description></item><item><title>Setting up a Shopware Environment with Windows</title><link>https://shyim.me/blog/shopware-development-environment-windows/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/shopware-development-environment-windows/</guid><description>At work I use Linux, but at home I prefer Windows due to gaming. In this short Tutorial I would like to share my Windows setup with you.
My recommended setup includes: WSL 2 Docker Desktop for Windows Ubuntu / Debian GWSL (X-Server for Windows) PhpStorm Development Docker setup or my own Docker setup. (We will use my own in this tutorial) At first we need to install WSL 2 and Docker Desktop.</description></item><item><title>Why I don't like Custom fields?</title><link>https://shyim.me/blog/custom-fields/</link><pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/custom-fields/</guid><description>Normally every project needs custom values saved on products or another entities. Shopware does offer by default Custom fields. It looks nice, but it can produce very fast issues.
Before we start: This is my opinion
Let&amp;rsquo;s start with a simple Pro Contra list.
Pro Can be easily created in the Administration / Code. Can define field types, labels etc and Shopware does the rendering in Administration for me Loaded by default on the entities Custom Fields are schema less.</description></item><item><title>How to deploy plugin updates automatically to the Shopware Store</title><link>https://shyim.me/blog/how-to-deploy-plugin-updates-to-shopware-store/</link><pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/how-to-deploy-plugin-updates-to-shopware-store/</guid><description>This blog post describes a small example how to automaticly deploy plugin updates to the Store. I will use the FroshPerformance plugin as example.
Preparation You will need
a Plugin which based on the 5.2 Pluginsystem or Shopware 6 Plugin a Continuous Integration (i will use Travis as example) Credentials for the Shopware Account FroshPluginUploader Prepare the Plugin itself You will need a plugin.xml with filled title, version, description, compability and changelog for the languages en and de.</description></item></channel></rss>