<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Shyim's Brain</title><link>https://shyim.me/</link><description>Recent content on Shyim's Brain</description><image><url>https://avatars.githubusercontent.com/u/6224096?v=4?s=400</url><link>https://avatars.githubusercontent.com/u/6224096?v=4?s=400</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Jul 2021 00:15:59 +0000</lastBuildDate><atom:link href="https://shyim.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimization of Thumbnails in PHP</title><link>https://shyim.me/blog/thumbnails-and-php/</link><pubDate>Wed, 14 Jul 2021 00:15:59 +0000</pubDate><guid>https://shyim.me/blog/thumbnails-and-php/</guid><description>Every shop owner wants a fast online shop with the best pagespeed results. The images have a huge impact on these stats. But can we achieve better results with only PHP?
Image generation with PHP In PHP there are two ways how images can be generated: using the gd, or the ImageMagick extension. Both extensions are not optimized to create very small images and they are quite slow. They also lack support for newer image formats like avif (PHP 8.</description></item><item><title>You don't need a plugin to customize a Shopware 6 project</title><link>https://shyim.me/blog/you-dont-need-a-plugin-to-customize-shopware-6/</link><pubDate>Sun, 04 Jul 2021 23:15:59 +0000</pubDate><guid>https://shyim.me/blog/you-dont-need-a-plugin-to-customize-shopware-6/</guid><description>Every developer who has created a plugin has already created a Symfony bundle. All Shopware plugins are extending from a Shopware bundle class which extends from the Symfony bundle. You might now ask yourself: when plugins are bundles, why did you write this blog post? First, let&amp;rsquo;s list the differences of a plugin and the two types of bundles:
Feature Plugin Shopware Bundle Symfony Bundle modifying Shopware ✔️ ✔️ ✔️ can have migrations ✔️ ✔️ ❌ can be a theme ✔️ ✔️ ❌ can modify admin / storefront with js/css ✔️ ✔️ ❌ can be installed, uninstalled (lifecyle) ✔️ ❌ ❌ can be managed by the shop owner in administration ✔️ ❌ ❌ The benefits of working with a Bundle Having less features is sometimes better.</description></item><item><title>Setting up a Shopware Environment with Windows</title><link>https://shyim.me/blog/shopware-development-environment-windows/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/shopware-development-environment-windows/</guid><description>At work I use Linux, but at home I prefer Windows due to gaming. In this short Tutorial I would like to share my Windows setup with you.
My recommended setup includes: WSL 2 Docker Desktop for Windows Ubuntu / Debian GWSL (X-Server for Windows) PhpStorm Development Docker setup or my own Docker setup. (We will use my own in this tutorial) At first we need to install WSL 2 and Docker Desktop.</description></item><item><title>Why I don't like Custom fields?</title><link>https://shyim.me/blog/custom-fields/</link><pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/custom-fields/</guid><description>Normally every project needs custom values saved on products or another entities. Shopware does offer by default Custom fields. It looks nice, but it can produce very fast issues.
Before we start: This is my opinion
Let&amp;rsquo;s start with a simple Pro Contra list.
Pro Can be easily created in the Administration / Code. Can define field types, labels etc and Shopware does the rendering in Administration for me Loaded by default on the entities Custom Fields are schema less.</description></item><item><title>How to deploy plugin updates automatically to the Shopware Store</title><link>https://shyim.me/blog/how-to-deploy-plugin-updates-to-shopware-store/</link><pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate><guid>https://shyim.me/blog/how-to-deploy-plugin-updates-to-shopware-store/</guid><description>This blog post describes a small example how to automaticly deploy plugin updates to the Store. I will use the FroshPerformance plugin as example.
Preparation You will need
a Plugin which based on the 5.2 Pluginsystem or Shopware 6 Plugin a Continuous Integration (i will use Travis as example) Credentials for the Shopware Account FroshPluginUploader Prepare the Plugin itself You will need a plugin.xml with filled title, version, description, compability and changelog for the languages en and de.</description></item><item><title>Cluster Setup</title><link>https://shyim.me/shopware-6/cluster-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-6/cluster-setup/</guid><description>This guide assumes you are using Shopware 6.3.0.0 or later</description></item><item><title>Config Overview</title><link>https://shyim.me/shopware-5/config-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/config-overview/</guid><description>Config Table</description></item><item><title>config.php Tweaks</title><link>https://shyim.me/shopware-5/config.php-tweaks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/config.php-tweaks/</guid><description>Disable Template Cache Add following code in your config.php to disable the Template Cache
&amp;#39;template&amp;#39; =&amp;gt; [ &amp;#39;forceCompile&amp;#39; =&amp;gt; true, ], Configure SMTP in config.php &amp;#39;mail&amp;#39; =&amp;gt; [ &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;smtp&amp;#39;, // Possible values: &amp;#39;mail&amp;#39;, &amp;#39;smtp&amp;#39;, &amp;#39;file&amp;#39; &amp;#39;host&amp;#39; =&amp;gt; &amp;#39;localhost&amp;#39;, &amp;#39;port&amp;#39; =&amp;gt; 587, &amp;#39;ssl&amp;#39; =&amp;gt; &amp;#39;tls&amp;#39;, // Possible values: &amp;#39;&amp;#39;, &amp;#39;tls&amp;#39;, &amp;#39;ssl&amp;#39; &amp;#39;auth&amp;#39; =&amp;gt; &amp;#39;login&amp;#39;, // Possible values: &amp;#39;plain&amp;#39;, &amp;#39;login&amp;#39;, &amp;#39;crammd5&amp;#39; &amp;#39;username&amp;#39; =&amp;gt; &amp;#39;me@localhost&amp;#39;, &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;mypassword&amp;#39; ], Redis {% hint style=&amp;ldquo;danger&amp;rdquo; %} When you use Redis for Session and Cache, you must use different databases for each.</description></item><item><title>DAL exceptions</title><link>https://shyim.me/shopware-6/dal-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-6/dal-errors/</guid><description>Expected input to be non empty non associative array. The entity repositories are built for multiple operations. Example array:
[ [ &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Test&amp;#39; ] ] Recrusion with OneToOne Association Both sides of the association should not have autoload enabled. Otherwise you have an never-ending recrusion</description></item><item><title>Event Cheat-Sheet</title><link>https://shyim.me/shopware-5/event-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/event-cheat-sheet/</guid><description>Shopware_Modules_Order_SendMail_FilterVariables Manipulate variables of sOrder mail
Shopware_Modules_Admin_CheckUser_Successful After checked is the user loggedin
Enlight_Controller_Action_MODULE_CONTROLLER_ACTION Overwrite or add new actions to a controller. In your subscriber you have to return true; at the end
Enlight_Bootstrap_AfterInitResource_DINAME After a service has been loaded
Enlight_Bootstrap_InitResource_DINAME Before a service has been loaded or register your own di
Enlight_Components_Mail_Send Before a mail is sent
Theme_Inheritance_Template_Directories_Collected An event to register global template directories
Enlight_Controller_Front_DispatchLoopShutdown It&amp;rsquo;s the last event before the response is send</description></item><item><title>Extjs Tweaks</title><link>https://shyim.me/shopware-5/extjs-less-than-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/extjs-less-than-3/</guid><description>Open backend application with link With /backend?app=[NAME] can you open any Module (/backend/?app=Article), you can also pass supported variables like /backend/?app=[NAME]&amp;amp;params[NAME]=VALUE (/backend/?app=Article&amp;amp;params[articleId]=1)
Create a real checkbox in config.xml &amp;lt;element type=&amp;quot;boolean&amp;quot;&amp;gt; &amp;lt;name&amp;gt;test&amp;lt;/name&amp;gt; &amp;lt;label lang=&amp;quot;de&amp;quot;&amp;gt;test&amp;lt;/label&amp;gt; &amp;lt;label lang=&amp;quot;en&amp;quot;&amp;gt;test&amp;lt;/label&amp;gt; &amp;lt;options&amp;gt; &amp;lt;xtype&amp;gt;checkbox&amp;lt;/xtype&amp;gt; &amp;lt;/options&amp;gt; &amp;lt;/element&amp;gt; Use components from another backend application When you want to use components from an another application, you have to load first the App. Otherwise the Ext.Loader cannot find the right controller to load the files.</description></item><item><title>General exceptions</title><link>https://shyim.me/shopware-6/general-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-6/general-errors/</guid><description>PageController can&amp;rsquo;t be requested via XmlHttpRequest By default Ajax is disabled on all Storefront controllers. You can enable it by adding an new defaults XmlHttpRequest Example:
/** * @Route(&amp;quot;/widgets/test&amp;quot;, name=&amp;quot;widgets.test&amp;quot;, options={&amp;quot;seo&amp;quot;=&amp;quot;false&amp;quot;}, methods={&amp;quot;GET&amp;quot;}, defaults={&amp;quot;XmlHttpRequest&amp;quot;=true}) */</description></item><item><title>Introduction</title><link>https://shyim.me/shopware-5/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/introduction/</guid><description>Hey my name is Shyim. In this personal Knowledgebase I will share with you some Tips and Tricks about Shopware.</description></item><item><title>Introduction</title><link>https://shyim.me/shopware-6/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-6/introduction/</guid><description>Hey my name is Shyim. In this personal Knowledgebase I will share with you some Tips and Tricks about Shopware.</description></item><item><title>Plugin System Features with Version</title><link>https://shyim.me/shopware-5/plugin-system-features-with-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/plugin-system-features-with-version/</guid><description>5.2.7
****automatic controller registration 5.2.10 added my_plugin.plugin_dir parameter 5.2.11 config.xml with store values and translateable 5.2.13 Autoloading of plugin resources (css,js,less) Payment Installer Automatisches laden von .css/.js/.less Dateien 5.2.15 cronjob.xml 5.2.17 config type button</description></item><item><title>Plugins</title><link>https://shyim.me/shopware-5/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/plugins/</guid><description>Add a Smarty Plugin folder with a Plugin It can be solved with a simple CompilerPass in your Plugin
{% code title=&amp;ldquo;MyPlugin/Components/CompilerPass/AddTemplatePluginDirCompilerPass.php&amp;rdquo; %}
&amp;lt;?php namespace MyPlugin\Components\CompilerPass; use Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface; use Symfony\Component\DependencyInjection\ContainerBuilder; class AddTemplatePluginDirCompilerPass implements CompilerPassInterface { public function process(ContainerBuilder $container) { $template = $container-&amp;gt;getDefinition(&amp;#39;template&amp;#39;); $template-&amp;gt;addMethodCall(&amp;#39;addPluginsDir&amp;#39;, [$container-&amp;gt;getParameter(&amp;#39;my_plugin.my_parameter_to_folder&amp;#39;)]); } } {% endcode %}
{% code title=&amp;ldquo;MyPlugin.php&amp;rdquo; %}
&amp;lt;?php class MyPlugin extends Plugin { public function build(ContainerBuilder $container) { parent::build($container); $container-&amp;gt;addCompilerPass(new AddTemplatePluginDirCompilerPass()); } } {% endcode %}</description></item><item><title>Problems and Solutions</title><link>https://shyim.me/shopware-5/problems-and-solutions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/problems-and-solutions/</guid><description>Sending a BCC Mail does not work? Zend-Mailer does not Support BCC on SMTP transport.It drops the Bcc header before sending the mail.
A solution could be to clone the mail and replace the receiver
Plugin-Manager still shows Trial-Version Open Plugin-Manager and press the Button &amp;ldquo;Synchronize licenses&amp;rdquo;. When the button does not exist in your used Version:
Login in your Shopware Account in Plugin Manager Clear all cookies of the Page Login in your Backend Licenses should be now synchronized in Background Smarty Plugins missing on Finish Page Can be only fixed with an Update to Shopware 5.</description></item><item><title>Smarty</title><link>https://shyim.me/shopware-5/smarty/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/shopware-5/smarty/</guid><description>Assign the snippet value to a variable {s name=&amp;quot;NameFromSnippet&amp;quot; assign=&amp;quot;tplVariable&amp;quot;}Default Value{/s} {$tplVariable|replace:'Test':'Lol'} Read plugin config values {config name=&amp;#34;myVar&amp;#34; namespace=&amp;#34;MYPLUGINNAME&amp;#34;} Check existence of Template file {if &amp;#34;frontend/foo.tpl&amp;#34;|template_exists}</description></item><item><title>Supports</title><link>https://shyim.me/supports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shyim.me/supports/</guid><description>This awesome people are supporting me:
Github Sponsors Thanks &amp;lt;3 to Webversiert GmbH for sponsoring me &amp;lt;3 Thanks &amp;lt;3 to Rafael Prukop for sponsoring me &amp;lt;3 Christopher Dosin for sponsoring me &amp;lt;3 Marcus Kreusch for sponsoring me &amp;lt;3 Alexander Wolf for sponsoring me &amp;lt;3 PayPal Supporters Kai Neuwerth (13,37€) Sebastian Langer (5€) Martin Schneider (6,66€) Uwe Kleinmann (5€) Joshua Behrens (4,20€) Michael Telgmann (6,66€) Christopher Puschmann (5,77€) Alea123 (6,66€) Rafael Prukop (25€) Nils Vosgröne (0,68€) Lars Borchert (6,66€) Lars Lohmann (5€) Sebastian König (5€) Alexander W.</description></item></channel></rss>